[
# See related document procedure-log-msc2020.txt
# Step 2: create identifier
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "code",
    "expression": "grel:\"<https://msc2020.org/resources/MSC/2020/MSC2020/\"+value+\">\"",
    "onError": "store-error",
    "newColumnName": "Concept Identifier",
    "columnInsertIndex": 2,
    "description": "Create column Concept Identifier at index 2 based on column code using expression grel:\"<https://msc2020.org/resources/MSC/2020/MSC2020/\"+value+\">\""
  },
  {
    "op": "core/column-move",
    "columnName": "Concept Identifier",
    "index": 4,
    "description": "Move column Concept Identifier to position 4"
  },
  
# Step 3: Create the label triples
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "text",
    "expression": "grel:cells['Concept Identifier'].value+\"skos:prefLabel\"+\" \\\"\"+value+\"\\\"\"+\"@en .\"",
    "onError": "store-error",
    "newColumnName": "Label triple",
    "columnInsertIndex": 3,
    "description": "Create column Label triple at index 3 based on column text using expression grel:cells['Concept Identifier'].value+\"skos:prefLabel\"+\" \\\"\"+value+\"\\\"\"+\"@en .\""
  },
  {
    "op": "core/column-move",
    "columnName": "Label triple",
    "index": 5,
    "description": "Move column Label triple to position 5"
  },
  
# Step 4: Create rdf:type statement
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "Concept Identifier",
    "expression": "grel:value+\" a skos:Concept .\"",
    "onError": "store-error",
    "newColumnName": "typification triple",
    "columnInsertIndex": 5,
    "description": "Create column typification triple at index 5 based on column Concept Identifier using expression grel:value+\" a skos:Concept .\""
  },
  {
    "op": "core/column-move",
    "columnName": "typification triple",
    "index": 6,
    "description": "Move column typification triple to position 6"
  },

# Step 5: Create skos:inScheme statement
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "Concept Identifier",
    "expression": "grel:value+\" skos:inScheme <https://msc2020.org/resources/MSC/2020/MSC2020/> .\"",
    "onError": "store-error",
    "newColumnName": "skos:in Scheme triple",
    "columnInsertIndex": 5,
    "description": "Create column skos:in Scheme triple at index 5 based on column Concept Identifier using expression grel:value+\" skos:inScheme <https://msc2020.org/resources/MSC/2020/MSC2020/> .\""
  },
  {
    "op": "core/column-move",
    "columnName": "skos:in Scheme triple",
    "index": 7,
    "description": "Move column skos:in Scheme triple to position 7"
  },
  
# Step 6: Create skos:notation statement
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "code",
    "expression": "grel:cells['Concept Identifier'].value+\" skos:notation \"+\"\\\"\"+value+\"\\\"^^xsd:string .\"",
    "onError": "store-error",
    "newColumnName": "notation triples",
    "columnInsertIndex": 2,
    "description": "Create column notation triples at index 2 based on column code using expression grel:cells['Concept Identifier'].value+\" skos:notation \"+\"\\\"\"+value+\"\\\"^^xsd:string .\""
  },
  {
    "op": "core/column-move",
    "columnName": "notation triples",
    "index": 8,
    "description": "Move column notation triples to position 8"
  },
  
#Step 7: Set a filter criterion for working on Task 3
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "text",
    "expression": "grel:if(cells['description'].value == value , true, false)",
    "onError": "store-error",
    "newColumnName": "comparison text/description",
    "columnInsertIndex": 3,
    "description": "Create column comparison text/description at index 3 based on column text using expression grel:if(cells['description'].value == value , true, false)"
  },
  {
    "op": "core/column-move",
    "columnName": "comparison text/description",
    "index": 9,
    "description": "Move column comparison text/description to position 9"
  },
  
 #Step 8: Create a column for each concept's superordinate's identifier
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "code",
          "columnName": "code",
          "query": "xx",
          "mode": "text",
          "caseSensitive": false,
          "invert": true
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "Concept Identifier",
    "expression": "grel:value.replace(/-\\d\\d/, \"-XX\").replace(/\\d\\d>/, \"xx>\")",
    "onError": "store-error",
    "newColumnName": "Identifier skos:broader",
    "columnInsertIndex": 5,
    "description": "Create column Identifier skos:broader at index 5 based on column Concept Identifier using expression grel:value.replace(/-\\d\\d/, \"-XX\").replace(/\\d\\d>/, \"xx>\")"
  },
  {
    "op": "core/column-move",
    "columnName": "Identifier skos:broader",
    "index": 10,
    "description": "Move column Identifier skos:broader to position 10"
  },
  
#Step 9: Create the skos:broader statements
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "Identifier skos:broader",
    "expression": "grel:cells['Concept Identifier'].value+\" skos:broader \"+value+\" .\"",
    "onError": "store-error",
    "newColumnName": "Hierarchy triples",
    "columnInsertIndex": 11,
    "description": "Create column Hierarchy triples at index 11 based on column Identifier skos:broader using expression grel:cells['Concept Identifier'].value+\" skos:broader \"+value+\" .\""
  },
  {
    "op": "core/column-move",
    "columnName": "Identifier skos:broader",
    "index": 9,
    "description": "Move column Identifier skos:broader to position 9"
  },
  {
    "op": "core/column-move",
    "columnName": "Hierarchy triples",
    "index": 10,
    "description": "Move column Hierarchy triples to position 10"
  },
  
#Step 10: Taiming the `description` column
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "comparison text/description",
          "expression": "value",
          "columnName": "comparison text/description",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "description",
          "expression": "value",
          "columnName": "description",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "None of the above, but in this section",
                "l": "None of the above, but in this section"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "record-based"
    },
    "baseColumnName": "description",
    "expression": "grel:value",
    "onError": "store-error",
    "newColumnName": "description - extract 1",
    "columnInsertIndex": 4,
    "description": "Create column description - extract 1 at index 4 based on column description using expression grel:value"
  },
  {
    "op": "core/column-move",
    "columnName": "description - extract 1",
    "index": 12,
    "description": "Move column description - extract 1 to position 12"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "comparison text/description",
          "expression": "value",
          "columnName": "comparison text/description",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "text",
          "name": "description",
          "columnName": "description",
          "query": "\\[See also \\d",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "record-based"
    },
    "baseColumnName": "description",
    "expression": "grel:value",
    "onError": "store-error",
    "newColumnName": "description extract 2",
    "columnInsertIndex": 4,
    "description": "Create column description extract 2 at index 4 based on column description using expression grel:value"
  },
  {
    "op": "core/column-move",
    "columnName": "description extract 2",
    "index": 13,
    "description": "Move column description extract 2 to position 13"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "comparison text/description",
          "expression": "value",
          "columnName": "comparison text/description",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "text",
          "name": "description",
          "columnName": "description",
          "query": "\\{For ",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "record-based"
    },
    "baseColumnName": "description",
    "expression": "grel:value",
    "onError": "store-error",
    "newColumnName": "description - extract 3 \\{For",
    "columnInsertIndex": 4,
    "description": "Create column description - extract 3 \\{For at index 4 based on column description using expression grel:value"
  },
  {
    "op": "core/column-move",
    "columnName": "description - extract 3 \\{For",
    "index": 14,
    "description": "Move column description - extract 3 \\{For to position 14"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "comparison text/description",
          "expression": "value",
          "columnName": "comparison text/description",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "text",
          "name": "description",
          "columnName": "description",
          "query": "[See mainly",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "record-based"
    },
    "baseColumnName": "description",
    "expression": "grel:value",
    "onError": "store-error",
    "newColumnName": "description - extract 4 [See mainly",
    "columnInsertIndex": 4,
    "description": "Create column description - extract 4 [See mainly at index 4 based on column description using expression grel:value"
  },
  {
    "op": "core/column-move",
    "columnName": "description - extract 4 [See mainly",
    "index": 15,
    "description": "Move column description - extract 4 [See mainly to position 15"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "comparison text/description",
          "expression": "value",
          "columnName": "comparison text/description",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "text",
          "name": "description",
          "columnName": "description",
          "query": "[Consider also classification numbers pertaining to Section 01-XX]",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "record-based"
    },
    "baseColumnName": "description",
    "expression": "grel:value",
    "onError": "store-error",
    "newColumnName": "description - extract 5",
    "columnInsertIndex": 4,
    "description": "Create column description - extract 5 at index 4 based on column description using expression grel:value"
  },
  {
    "op": "core/column-move",
    "columnName": "description - extract 5",
    "index": 16,
    "description": "Move column description - extract 5 to position 16"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "comparison text/description",
          "expression": "value",
          "columnName": "comparison text/description",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "description - extract 1",
          "expression": "value",
          "columnName": "description - extract 1",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [],
          "selectBlank": true,
          "selectError": false
        },
        {
          "type": "list",
          "name": "description extract 2",
          "expression": "value",
          "columnName": "description extract 2",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [],
          "selectBlank": true,
          "selectError": false
        },
        {
          "type": "list",
          "name": "description - extract 3 \\{For",
          "expression": "value",
          "columnName": "description - extract 3 \\{For",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [],
          "selectBlank": true,
          "selectError": false
        },
        {
          "type": "list",
          "name": "description - extract 4 [See mainly",
          "expression": "value",
          "columnName": "description - extract 4 [See mainly",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [],
          "selectBlank": true,
          "selectError": false
        },
        {
          "type": "list",
          "name": "description - extract 5",
          "expression": "value",
          "columnName": "description - extract 5",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [],
          "selectBlank": true,
          "selectError": false
        }
      ],
      "mode": "record-based"
    },
    "baseColumnName": "description",
    "expression": "grel:value",
    "onError": "set-to-blank",
    "newColumnName": "description - extract 6 rest",
    "columnInsertIndex": 4,
    "description": "Create column description - extract 6 rest at index 4 based on column description using expression grel:value"
  },
  {
    "op": "core/column-move",
    "columnName": "description - extract 6 rest",
    "index": 17,
    "description": "Move column description - extract 6 rest to position 17"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "description - extract 1",
          "expression": "value",
          "columnName": "description - extract 1",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "None of the above, but in this section",
                "l": "None of the above, but in this section"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "description - extract 1",
    "expression": "grel:cells[\"Concept Identifier\"].value+\" skos:scopeNote \\\"\"+value+\"\\\"@en .\"",
    "onError": "store-error",
    "newColumnName": "skos:scopeNote \"None of the above\"@en",
    "columnInsertIndex": 13,
    "description": "Create column skos:scopeNote \"None of the above\"@en at index 13 based on column description - extract 1 using expression grel:cells[\"Concept Identifier\"].value+\" skos:scopeNote \\\"\"+value+\"\\\"@en .\""
  },
  {
    "op": "core/column-split",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "description extract 2",
          "expression": "value",
          "columnName": "description extract 2",
          "invert": true,
          "omitBlank": false,
          "omitError": false,
          "selection": [],
          "selectBlank": true,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "description extract 2",
    "guessCellType": true,
    "removeOriginalColumn": false,
    "mode": "separator",
    "separator": "[",
    "regex": false,
    "maxColumns": 2,
    "description": "Split column description extract 2 by separator"
  },
  {
    "op": "core/multivalued-cell-split",
    "columnName": "description extract 2 2",
    "keyColumnName": "File",
    "mode": "separator",
    "separator": "];",
    "regex": false,
    "description": "Split multi-valued cells in column description extract 2 2"
  },
  {
    "op": "core/fill-down",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "File",
    "description": "Fill down cells in column File"
  },
  {
    "op": "core/fill-down",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "code",
    "description": "Fill down cells in column code"
  },
  {
    "op": "core/fill-down",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "text",
    "description": "Fill down cells in column text"
  },
  {
    "op": "core/fill-down",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "description",
    "description": "Fill down cells in column description"
  },
  {
    "op": "core/fill-down",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Concept Identifier",
    "description": "Fill down cells in column Concept Identifier"
  },
  {
    "op": "core/fill-down",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "comparison text/description",
    "description": "Fill down cells in column comparison text/description"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "description extract 2 2",
          "expression": "value",
          "columnName": "description extract 2 2",
          "invert": true,
          "omitBlank": false,
          "omitError": false,
          "selection": [],
          "selectBlank": true,
          "selectError": false
        },
        {
          "type": "text",
          "name": "description extract 2 2",
          "columnName": "description extract 2 2",
          "query": "^See also",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "description extract 2 2",
          "columnName": "description extract 2 2",
          "query": "\\d\\b\\]|x\\b\\]|,|x\\b|5\\b",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "description extract 2 2",
    "expression": "grel:value",
    "onError": "store-error",
    "newColumnName": "description extract 2 2 1",
    "columnInsertIndex": 17,
    "description": "Create column description extract 2 2 1 at index 17 based on column description extract 2 2 using expression grel:value"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "description extract 2 2",
          "expression": "value",
          "columnName": "description extract 2 2",
          "invert": true,
          "omitBlank": false,
          "omitError": false,
          "selection": [],
          "selectBlank": true,
          "selectError": false
        },
        {
          "type": "text",
          "name": "description extract 2 2",
          "columnName": "description extract 2 2",
          "query": "^See also|^ ",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "description extract 2 2",
          "columnName": "description extract 2 2",
          "query": "\\d\\b\\]|x\\b\\]|,|x\\b|5\\b",
          "mode": "regex",
          "caseSensitive": false,
          "invert": true
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "description extract 2 2",
    "expression": "grel:value",
    "onError": "store-error",
    "newColumnName": "dewcription extract 2 2 2 (rest)",
    "columnInsertIndex": 17,
    "description": "Create column dewcription extract 2 2 2 (rest) at index 17 based on column description extract 2 2 using expression grel:value"
  },
  {
    "op": "core/column-move",
    "columnName": "dewcription extract 2 2 2 (rest)",
    "index": 18,
    "description": "Move column dewcription extract 2 2 2 (rest) to position 18"
  },
  {
    "op": "core/multivalued-cell-split",
    "columnName": "description extract 2 2 1",
    "keyColumnName": "File",
    "mode": "separator",
    "separator": "\\{",
    "regex": false,
    "description": "Split multi-valued cells in column description extract 2 2 1"
  },
  {
    "op": "core/fill-down",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "File",
    "description": "Fill down cells in column File"
  },
  {
    "op": "core/fill-down",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "code",
    "description": "Fill down cells in column code"
  },
  {
    "op": "core/fill-down",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "text",
    "description": "Fill down cells in column text"
  },
  {
    "op": "core/fill-down",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "description",
    "description": "Fill down cells in column description"
  },
  {
    "op": "core/fill-down",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Concept Identifier",
    "description": "Fill down cells in column Concept Identifier"
  },
  {
    "op": "core/fill-down",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "comparison text/description",
    "description": "Fill down cells in column comparison text/description"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "description extract 2 2 1",
          "expression": "value",
          "columnName": "description extract 2 2 1",
          "invert": true,
          "omitBlank": false,
          "omitError": false,
          "selection": [],
          "selectBlank": true,
          "selectError": false
        },
        {
          "type": "text",
          "name": "description extract 2 2 1",
          "columnName": "description extract 2 2 1",
          "query": "^For",
          "mode": "regex",
          "caseSensitive": false,
          "invert": true
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "description extract 2 2 1",
    "expression": "grel:value.replace(\"See also\", \"\").replace(\"]\", \"\")",
    "onError": "store-error",
    "newColumnName": "see also reference",
    "columnInsertIndex": 18,
    "description": "Create column see also reference at index 18 based on column description extract 2 2 1 using expression grel:value.replace(\"See also\", \"\").replace(\"]\", \"\")"
  },
  {
    "op": "core/multivalued-cell-split",
    "columnName": "see also reference",
    "keyColumnName": "File",
    "mode": "separator",
    "separator": ", ",
    "regex": false,
    "description": "Split multi-valued cells in column see also reference"
  },
  {
    "op": "core/fill-down",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "File",
    "description": "Fill down cells in column File"
  },
  {
    "op": "core/fill-down",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "code",
    "description": "Fill down cells in column code"
  },
  {
    "op": "core/fill-down",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "text",
    "description": "Fill down cells in column text"
  },
  {
    "op": "core/fill-down",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "description",
    "description": "Fill down cells in column description"
  },
  {
    "op": "core/fill-down",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Concept Identifier",
    "description": "Fill down cells in column Concept Identifier"
  },
  {
    "op": "core/fill-down",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "comparison text/description",
    "description": "Fill down cells in column comparison text/description"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "see also reference",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column see also reference using expression value.trim()"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "see also reference",
          "expression": "value",
          "columnName": "see also reference",
          "invert": true,
          "omitBlank": false,
          "omitError": false,
          "selection": [],
          "selectBlank": true,
          "selectError": false
        },
        {
          "type": "text",
          "name": "see also reference",
          "columnName": "see also reference",
          "query": "\\d\\d[A-Z]\\d\\d|\\d\\d-XX|\\d\\d-xx|\\d\\d[A-Z]xx|\\d\\d-\\d\\d",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "see also reference",
          "columnName": "see also reference",
          "query": "and|especially|in particular",
          "mode": "regex",
          "caseSensitive": false,
          "invert": true
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "see also reference",
    "expression": "grel:cells[\"Concept Identifier\"].value+\" msc:seeAlso \"+\"<https://msc2020.org/resources/MSC/2020/MSC2020/\"+value+\"> .\"",
    "onError": "store-error",
    "newColumnName": "msc:seeAlso ?y",
    "columnInsertIndex": 19,
    "description": "Create column msc:seeAlso ?y at index 19 based on column see also reference using expression grel:cells[\"Concept Identifier\"].value+\" msc:seeAlso \"+\"<https://msc2020.org/resources/MSC/2020/MSC2020/\"+value+\"> .\""
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "msc:seeAlso ?y",
          "expression": "value",
          "columnName": "msc:seeAlso ?y",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [],
          "selectBlank": true,
          "selectError": false
        },
        {
          "type": "list",
          "name": "see also reference",
          "expression": "value",
          "columnName": "see also reference",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "08B05 and 08B10",
                "l": "08B05 and 08B10"
              }
            },
            {
              "v": {
                "v": "and 82D25",
                "l": "and 82D25"
              }
            },
            {
              "v": {
                "v": "14Lxx and 20Gxx",
                "l": "14Lxx and 20Gxx"
              }
            },
            {
              "v": {
                "v": "especially 53C70",
                "l": "especially 53C70"
              }
            },
            {
              "v": {
                "v": "especially 51F15",
                "l": "especially 51F15"
              }
            },
            {
              "v": {
                "v": "in particular 03C60",
                "l": "in particular 03C60"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "see also reference",
    "expression": "grel:value.replace(\"in particular \", \"\").replace(\"especially \", \"\")",
    "onError": "store-error",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column see also reference using expression grel:value.replace(\"in particular \", \"\").replace(\"especially \", \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "msc:seeAlso ?y",
          "expression": "value",
          "columnName": "msc:seeAlso ?y",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [],
          "selectBlank": true,
          "selectError": false
        },
        {
          "type": "list",
          "name": "see also reference",
          "expression": "value",
          "columnName": "see also reference",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "08B05 and 08B10",
                "l": "08B05 and 08B10"
              }
            },
            {
              "v": {
                "v": "and 82D25",
                "l": "and 82D25"
              }
            },
            {
              "v": {
                "v": "14Lxx and 20Gxx",
                "l": "14Lxx and 20Gxx"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "see also reference",
    "expression": "grel:value.replace(\"and \", \"|\").replace(\" \", \"\")",
    "onError": "store-error",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column see also reference using expression grel:value.replace(\"and \", \"|\").replace(\" \", \"\")"
  },
  {
    "op": "core/multivalued-cell-split",
    "columnName": "see also reference",
    "keyColumnName": "File",
    "mode": "separator",
    "separator": "|",
    "regex": false,
    "description": "Split multi-valued cells in column see also reference"
  },
  {
    "op": "core/fill-down",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "File",
    "description": "Fill down cells in column File"
  },
  {
    "op": "core/fill-down",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "code",
    "description": "Fill down cells in column code"
  },
  {
    "op": "core/fill-down",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "text",
    "description": "Fill down cells in column text"
  },
  {
    "op": "core/fill-down",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "description",
    "description": "Fill down cells in column description"
  },
  {
    "op": "core/fill-down",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Concept Identifier",
    "description": "Fill down cells in column Concept Identifier"
  },
  {
    "op": "core/fill-down",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "comparison text/description",
    "description": "Fill down cells in column comparison text/description"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "msc:seeAlso ?y",
          "expression": "value",
          "columnName": "msc:seeAlso ?y",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [],
          "selectBlank": true,
          "selectError": false
        },
        {
          "type": "list",
          "name": "see also reference",
          "expression": "value",
          "columnName": "see also reference",
          "invert": true,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "Hodge conjecture",
                "l": "Hodge conjecture"
              }
            },
            {
              "v": {
                "v": "Krull dimension (associative rings and algebras)",
                "l": "Krull dimension (associative rings and algebras)"
              }
            },
            {
              "v": {
                "v": "etc.",
                "l": "etc."
              }
            },
            {
              "v": {
                "v": "Laurent polynomial rings (associative algebraic aspects)",
                "l": "Laurent polynomial rings (associative algebraic aspects)"
              }
            }
          ],
          "selectBlank": true,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "see also reference",
    "expression": "grel:cells[\"Concept Identifier\"].value+\" msc:seeAlso <https://msc2020.org/resources/MSC/2020/MSC2020/\"+value+\"> .\"",
    "onError": "store-error",
    "newColumnName": "msc:seeAlso ?y 2",
    "columnInsertIndex": 19,
    "description": "Create column msc:seeAlso ?y 2 at index 19 based on column see also reference using expression grel:cells[\"Concept Identifier\"].value+\" msc:seeAlso <https://msc2020.org/resources/MSC/2020/MSC2020/\"+value+\"> .\""
  },
  {
    "op": "core/column-move",
    "columnName": "msc:seeAlso ?y 2",
    "index": 20,
    "description": "Move column msc:seeAlso ?y 2 to position 20"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "dewcription extract 2 2 2 (rest)",
          "expression": "value",
          "columnName": "dewcription extract 2 2 2 (rest)",
          "invert": true,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": " elliptic complexes",
                "l": " elliptic complexes"
              }
            },
            {
              "v": {
                "v": " module theory in a category-theoretic context; Morita equivalence and duality",
                "l": " module theory in a category-theoretic context; Morita equivalence and duality"
              }
            },
            {
              "v": {
                "v": " mixture models",
                "l": " mixture models"
              }
            }
          ],
          "selectBlank": true,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "dewcription extract 2 2 2 (rest)",
    "expression": "grel:cells[\"Concept Identifier\"].value+\" skos:scopeNote \"+\"\\\"\"+value.replace(\"]\", \"\\\"\")+\"@en ;skos:editorialNote \\\"Add the relations to --00 subcategories in other sections with SPARQL and regex filters\\\"@en .\"",
    "onError": "store-error",
    "newColumnName": "skos:scopeNote 2",
    "columnInsertIndex": 22,
    "description": "Create column skos:scopeNote 2 at index 22 based on column dewcription extract 2 2 2 (rest) using expression grel:cells[\"Concept Identifier\"].value+\" skos:scopeNote \"+\"\\\"\"+value.replace(\"]\", \"\\\"\")+\"@en ;skos:editorialNote \\\"Add the relations to --00 subcategories in other sections with SPARQL and regex filters\\\"@en .\""
  },
  {
    "op": "core/multivalued-cell-split",
    "columnName": "description - extract 5",
    "keyColumnName": "File",
    "mode": "separator",
    "separator": "[",
    "regex": false,
    "description": "Split multi-valued cells in column description - extract 5"
  },
  {
    "op": "core/fill-down",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "File",
    "description": "Fill down cells in column File"
  },
  {
    "op": "core/fill-down",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "code",
    "description": "Fill down cells in column code"
  },
  {
    "op": "core/fill-down",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "text",
    "description": "Fill down cells in column text"
  },
  {
    "op": "core/fill-down",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "description",
    "description": "Fill down cells in column description"
  },
  {
    "op": "core/fill-down",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "comparison text/description",
    "description": "Fill down cells in column comparison text/description"
  },
  {
    "op": "core/fill-down",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Concept Identifier",
    "description": "Fill down cells in column Concept Identifier"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "description - extract 5",
          "expression": "value",
          "columnName": "description - extract 5",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "Consider also classification numbers pertaining to Section 01-XX]",
                "l": "Consider also classification numbers pertaining to Section 01-XX]"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "description - extract 5",
    "expression": "grel:cells[\"Concept Identifier\"].value+\" skos:scopeNote \\\"\"+value.replace(\"]\", \"\")+\"\\\"@en .\"",
    "onError": "store-error",
    "newColumnName": "skos:scopeNote \"Consider history classes\"",
    "columnInsertIndex": 26,
    "description": "Create column skos:scopeNote \"Consider history classes\" at index 26 based on column description - extract 5 using expression grel:cells[\"Concept Identifier\"].value+\" skos:scopeNote \\\"\"+value.replace(\"]\", \"\")+\"\\\"@en .\""
  },
  {
    "op": "core/column-split",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "description - extract 4 [See mainly",
          "expression": "value",
          "columnName": "description - extract 4 [See mainly",
          "invert": true,
          "omitBlank": false,
          "omitError": false,
          "selection": [],
          "selectBlank": true,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "description - extract 4 [See mainly",
    "guessCellType": true,
    "removeOriginalColumn": false,
    "mode": "separator",
    "separator": "[",
    "regex": false,
    "maxColumns": 2,
    "description": "Split column description - extract 4 [See mainly by separator"
  },
  {
    "op": "core/multivalued-cell-split",
    "columnName": "description - extract 4 [See mainly 2",
    "keyColumnName": "File",
    "mode": "separator",
    "separator": ";",
    "regex": false,
    "description": "Split multi-valued cells in column description - extract 4 [See mainly 2"
  },
  {
    "op": "core/fill-down",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "File",
    "description": "Fill down cells in column File"
  },
  {
    "op": "core/fill-down",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "code",
    "description": "Fill down cells in column code"
  },
  {
    "op": "core/fill-down",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "text",
    "description": "Fill down cells in column text"
  },
  {
    "op": "core/fill-down",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "description",
    "description": "Fill down cells in column description"
  },
  {
    "op": "core/fill-down",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Concept Identifier",
    "description": "Fill down cells in column Concept Identifier"
  },
  {
    "op": "core/fill-down",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "comparison text/description",
    "description": "Fill down cells in column comparison text/description"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "description - extract 4 [See mainly 2",
          "expression": "value",
          "columnName": "description - extract 4 [See mainly 2",
          "invert": true,
          "omitBlank": false,
          "omitError": false,
          "selection": [],
          "selectBlank": true,
          "selectError": false
        },
        {
          "type": "text",
          "name": "description - extract 4 [See mainly 2",
          "columnName": "description - extract 4 [See mainly 2",
          "query": "^See mainly",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "description - extract 4 [See mainly 2",
    "expression": "grel:value.replace(\"See mainly \", \"\").replace(\"]\", \"\").replace(\", and also \", \"|\").replace(\", \", \"|\")",
    "onError": "store-error",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column description - extract 4 [See mainly 2 using expression grel:value.replace(\"See mainly \", \"\").replace(\"]\", \"\").replace(\", and also \", \"|\").replace(\", \", \"|\")"
  },
  {
    "op": "core/multivalued-cell-split",
    "columnName": "description - extract 4 [See mainly 2",
    "keyColumnName": "File",
    "mode": "separator",
    "separator": "|",
    "regex": false,
    "description": "Split multi-valued cells in column description - extract 4 [See mainly 2"
  },
  {
    "op": "core/fill-down",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "File",
    "description": "Fill down cells in column File"
  },
  {
    "op": "core/fill-down",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "code",
    "description": "Fill down cells in column code"
  },
  {
    "op": "core/fill-down",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "text",
    "description": "Fill down cells in column text"
  },
  {
    "op": "core/fill-down",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "description",
    "description": "Fill down cells in column description"
  },
  {
    "op": "core/fill-down",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Concept Identifier",
    "description": "Fill down cells in column Concept Identifier"
  },
  {
    "op": "core/fill-down",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "comparison text/description",
    "description": "Fill down cells in column comparison text/description"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "description - extract 4 [See mainly 2",
          "expression": "value",
          "columnName": "description - extract 4 [See mainly 2",
          "invert": true,
          "omitBlank": false,
          "omitError": false,
          "selection": [],
          "selectBlank": true,
          "selectError": false
        },
        {
          "type": "text",
          "name": "description - extract 4 [See mainly 2",
          "columnName": "description - extract 4 [See mainly 2",
          "query": "see also",
          "mode": "text",
          "caseSensitive": false,
          "invert": true
        }
      ],
      "mode": "row-based"
    },
    "columnName": "description - extract 4 [See mainly 2",
    "expression": "grel:value.replace(\"especially \", \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column description - extract 4 [See mainly 2 using expression grel:value.replace(\"especially \", \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "description - extract 4 [See mainly 2",
          "expression": "value",
          "columnName": "description - extract 4 [See mainly 2",
          "invert": true,
          "omitBlank": false,
          "omitError": false,
          "selection": [],
          "selectBlank": true,
          "selectError": false
        },
        {
          "type": "text",
          "name": "description - extract 4 [See mainly 2",
          "columnName": "description - extract 4 [See mainly 2",
          "query": "see also",
          "mode": "text",
          "caseSensitive": false,
          "invert": true
        }
      ],
      "mode": "row-based"
    },
    "columnName": "description - extract 4 [See mainly 2",
    "expression": "grel:value.replace(/.+y /, \"\").replace(\"]\", \"\")",
    "onError": "store-error",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column description - extract 4 [See mainly 2 using expression grel:value.replace(/.+y /, \"\").replace(\"]\", \"\")"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "description - extract 4 [See mainly 2",
          "expression": "value",
          "columnName": "description - extract 4 [See mainly 2",
          "invert": true,
          "omitBlank": false,
          "omitError": false,
          "selection": [],
          "selectBlank": true,
          "selectError": false
        },
        {
          "type": "text",
          "name": "description - extract 4 [See mainly 2",
          "columnName": "description - extract 4 [See mainly 2",
          "query": "see also",
          "mode": "text",
          "caseSensitive": false,
          "invert": true
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "description - extract 4 [See mainly 2",
    "expression": "grel:cells[\"Concept Identifier\"].value+\" msc:seeMainly <https://msc2020.org/resources/MSC/2020/MSC2020/\"+value+\"> .\"",
    "onError": "store-error",
    "newColumnName": "msc:seeMainly",
    "columnInsertIndex": 27,
    "description": "Create column msc:seeMainly at index 27 based on column description - extract 4 [See mainly 2 using expression grel:cells[\"Concept Identifier\"].value+\" msc:seeMainly <https://msc2020.org/resources/MSC/2020/MSC2020/\"+value+\"> .\""
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "description - extract 4 [See mainly 2",
          "expression": "value",
          "columnName": "description - extract 4 [See mainly 2",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": " see also 46S10, 47S10]",
                "l": " see also 46S10, 47S10]"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "msc:seeAlso ?y",
          "expression": "value",
          "columnName": "msc:seeAlso ?y",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [],
          "selectBlank": true,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "description - extract 4 [See mainly 2",
    "expression": "grel:value.replace(\" see also \", \"\").replace(\"]\", \"\").replace(\", \", \"|\")",
    "onError": "store-error",
    "newColumnName": "missed see also reference",
    "columnInsertIndex": 27,
    "description": "Create column missed see also reference at index 27 based on column description - extract 4 [See mainly 2 using expression grel:value.replace(\" see also \", \"\").replace(\"]\", \"\").replace(\", \", \"|\")"
  },
  {
    "op": "core/multivalued-cell-split",
    "columnName": "missed see also reference",
    "keyColumnName": "File",
    "mode": "separator",
    "separator": "|",
    "regex": false,
    "description": "Split multi-valued cells in column missed see also reference"
  },
  {
    "op": "core/fill-down",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "File",
    "description": "Fill down cells in column File"
  },
  {
    "op": "core/fill-down",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "code",
    "description": "Fill down cells in column code"
  },
  {
    "op": "core/fill-down",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "text",
    "description": "Fill down cells in column text"
  },
  {
    "op": "core/fill-down",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "description",
    "description": "Fill down cells in column description"
  },
  {
    "op": "core/fill-down",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Concept Identifier",
    "description": "Fill down cells in column Concept Identifier"
  },
  {
    "op": "core/fill-down",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "comparison text/description",
    "description": "Fill down cells in column comparison text/description"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "missed see also reference",
          "expression": "value",
          "columnName": "missed see also reference",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "46S10",
                "l": "46S10"
              }
            },
            {
              "v": {
                "v": "47S10",
                "l": "47S10"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "missed see also reference",
    "expression": "grel:cells[\"Concept Identifier\"].value+\" msc:seeAlso <http://msc.org.resources/MSC/msc2020/\"+value+\"> .\"",
    "onError": "store-error",
    "newColumnName": "msc:seeAlso ?y 3",
    "columnInsertIndex": 28,
    "description": "Create column msc:seeAlso ?y 3 at index 28 based on column missed see also reference using expression grel:cells[\"Concept Identifier\"].value+\" msc:seeAlso <http://msc.org.resources/MSC/msc2020/\"+value+\"> .\""
  },
  {
    "op": "core/column-split",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "description - extract 3 \\{For",
          "expression": "value",
          "columnName": "description - extract 3 \\{For",
          "invert": true,
          "omitBlank": false,
          "omitError": false,
          "selection": [],
          "selectBlank": true,
          "selectError": false
        },
        {
          "type": "text",
          "name": "description - extract 3 \\{For",
          "columnName": "description - extract 3 \\{For",
          "query": "\\{",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "record-based"
    },
    "columnName": "description - extract 3 \\{For",
    "guessCellType": true,
    "removeOriginalColumn": false,
    "mode": "separator",
    "separator": "\\{",
    "regex": false,
    "maxColumns": 2,
    "description": "Split column description - extract 3 \\{For by separator"
  },
  {
    "op": "core/multivalued-cell-split",
    "columnName": "description - extract 3 \\{For 2",
    "keyColumnName": "File",
    "mode": "separator",
    "separator": ";",
    "regex": false,
    "description": "Split multi-valued cells in column description - extract 3 \\{For 2"
  },
  {
    "op": "core/fill-down",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "File",
    "description": "Fill down cells in column File"
  },
  {
    "op": "core/fill-down",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "code",
    "description": "Fill down cells in column code"
  },
  {
    "op": "core/fill-down",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "text",
    "description": "Fill down cells in column text"
  },
  {
    "op": "core/fill-down",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "description",
    "description": "Fill down cells in column description"
  },
  {
    "op": "core/fill-down",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Concept Identifier",
    "description": "Fill down cells in column Concept Identifier"
  },
  {
    "op": "core/fill-down",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "comparison text/description",
    "description": "Fill down cells in column comparison text/description"
  },
  {
    "op": "core/multivalued-cell-split",
    "columnName": "description - extract 3 \\{For 2",
    "keyColumnName": "File",
    "mode": "separator",
    "separator": "[",
    "regex": false,
    "description": "Split multi-valued cells in column description - extract 3 \\{For 2"
  },
  {
    "op": "core/fill-down",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "File",
    "description": "Fill down cells in column File"
  },
  {
    "op": "core/fill-down",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "code",
    "description": "Fill down cells in column code"
  },
  {
    "op": "core/fill-down",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "text",
    "description": "Fill down cells in column text"
  },
  {
    "op": "core/fill-down",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "description",
    "description": "Fill down cells in column description"
  },
  {
    "op": "core/fill-down",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Concept Identifier",
    "description": "Fill down cells in column Concept Identifier"
  },
  {
    "op": "core/fill-down",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "comparison text/description",
    "description": "Fill down cells in column comparison text/description"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "description - extract 3 \\{For 2",
          "columnName": "description - extract 3 \\{For 2",
          "query": "^See also",
          "mode": "regex",
          "caseSensitive": false,
          "invert": true
        },
        {
          "type": "text",
          "name": "description - extract 3 \\{For 2",
          "columnName": "description - extract 3 \\{For 2",
          "query": ", see",
          "mode": "text",
          "caseSensitive": false,
          "invert": true
        }
      ],
      "mode": "row-based"
    },
    "columnName": "description - extract 3 \\{For 2",
    "expression": "value",
    "edits": [
      {
        "from": [
          "For WKB methods see 34E20\\}"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "For WKB methods, see 34E20\\}"
      }
    ],
    "description": "Mass edit cells in column description - extract 3 \\{For 2"
  },
  {
    "op": "core/column-split",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "description - extract 3 \\{For 2",
          "expression": "value",
          "columnName": "description - extract 3 \\{For 2",
          "invert": true,
          "omitBlank": false,
          "omitError": false,
          "selection": [],
          "selectBlank": true,
          "selectError": false
        },
        {
          "type": "text",
          "name": "description - extract 3 \\{For 2",
          "columnName": "description - extract 3 \\{For 2",
          "query": "^See also",
          "mode": "regex",
          "caseSensitive": false,
          "invert": true
        }
      ],
      "mode": "row-based"
    },
    "columnName": "description - extract 3 \\{For 2",
    "guessCellType": true,
    "removeOriginalColumn": false,
    "mode": "separator",
    "separator": ", see",
    "regex": false,
    "maxColumns": 2,
    "description": "Split column description - extract 3 \\{For 2 by separator"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "description - extract 3 \\{For 2 1",
    "newColumnName": "msc:scope",
    "description": "Rename column description - extract 3 \\{For 2 1 to msc:scope"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "description - extract 3 \\{For 2 2",
    "newColumnName": "msc:ForTarget",
    "description": "Rename column description - extract 3 \\{For 2 2 to msc:ForTarget"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "msc:scope",
          "expression": "value",
          "columnName": "msc:scope",
          "invert": true,
          "omitBlank": false,
          "omitError": false,
          "selection": [],
          "selectBlank": true,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "msc:scope",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column msc:scope using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "msc:ForTarget",
          "expression": "value",
          "columnName": "msc:ForTarget",
          "invert": true,
          "omitBlank": false,
          "omitError": false,
          "selection": [],
          "selectBlank": true,
          "selectError": false
        },
        {
          "type": "text",
          "name": "msc:ForTarget",
          "columnName": "msc:ForTarget",
          "query": "\\d\\d[A-Z]\\d\\d\\\\}",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "msc:ForTarget",
          "columnName": "msc:ForTarget",
          "query": ",",
          "mode": "text",
          "caseSensitive": false,
          "invert": true
        }
      ],
      "mode": "row-based"
    },
    "columnName": "msc:ForTarget",
    "expression": "grel:value.replace(\"\\\\}\", \"\").replace(\"also \",  \"\").replace(\"especially \", \"\").replace(\"mainly \", \"\")",
    "onError": "store-error",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column msc:ForTarget using expression grel:value.replace(\"\\\\}\", \"\").replace(\"also \",  \"\").replace(\"especially \", \"\").replace(\"mainly \", \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "msc:ForTarget",
          "expression": "value",
          "columnName": "msc:ForTarget",
          "invert": true,
          "omitBlank": false,
          "omitError": false,
          "selection": [],
          "selectBlank": true,
          "selectError": false
        },
        {
          "type": "text",
          "name": "msc:ForTarget",
          "columnName": "msc:ForTarget",
          "query": "also",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "msc:ForTarget",
          "columnName": "msc:ForTarget",
          "query": ",",
          "mode": "text",
          "caseSensitive": false,
          "invert": true
        }
      ],
      "mode": "row-based"
    },
    "columnName": "msc:ForTarget",
    "expression": "grel:value.replace(\"also \", \"\")",
    "onError": "store-error",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column msc:ForTarget using expression grel:value.replace(\"also \", \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "msc:ForTarget",
          "expression": "value",
          "columnName": "msc:ForTarget",
          "invert": true,
          "omitBlank": false,
          "omitError": false,
          "selection": [],
          "selectBlank": true,
          "selectError": false
        },
        {
          "type": "text",
          "name": "msc:ForTarget",
          "columnName": "msc:ForTarget",
          "query": "\\d\\d\\\\}",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "msc:ForTarget",
          "columnName": "msc:ForTarget",
          "query": ",",
          "mode": "text",
          "caseSensitive": false,
          "invert": true
        }
      ],
      "mode": "row-based"
    },
    "columnName": "msc:ForTarget",
    "expression": "grel:value.replace(\"\\\\}\", \"\")",
    "onError": "store-error",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column msc:ForTarget using expression grel:value.replace(\"\\\\}\", \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "msc:ForTarget",
          "expression": "value",
          "columnName": "msc:ForTarget",
          "invert": true,
          "omitBlank": false,
          "omitError": false,
          "selection": [],
          "selectBlank": true,
          "selectError": false
        },
        {
          "type": "text",
          "name": "msc:ForTarget",
          "columnName": "msc:ForTarget",
          "query": "XX\\\\}",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "msc:ForTarget",
          "columnName": "msc:ForTarget",
          "query": ",",
          "mode": "text",
          "caseSensitive": false,
          "invert": true
        }
      ],
      "mode": "row-based"
    },
    "columnName": "msc:ForTarget",
    "expression": "grel:value.replace(\"\\\\}\", \"\")",
    "onError": "store-error",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column msc:ForTarget using expression grel:value.replace(\"\\\\}\", \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "msc:ForTarget",
          "columnName": "msc:ForTarget",
          "query": "~",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "msc:ForTarget",
          "columnName": "msc:ForTarget",
          "query": ",",
          "mode": "text",
          "caseSensitive": false,
          "invert": true
        }
      ],
      "mode": "row-based"
    },
    "columnName": "msc:ForTarget",
    "expression": "grel:value.replace(\"~\", \"\")",
    "onError": "store-error",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column msc:ForTarget using expression grel:value.replace(\"~\", \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "msc:ForTarget",
          "expression": "value",
          "columnName": "msc:ForTarget",
          "invert": true,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": " 00A79 and Sections 70-XX through 86-XX",
                "l": " 00A79 and Sections 70-XX through 86-XX"
              }
            },
            {
              "v": {
                "v": " the classification number -04 in that area\\}",
                "l": " the classification number -04 in that area\\}"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "text",
          "name": "msc:ForTarget",
          "columnName": "msc:ForTarget",
          "query": ",",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "msc:ForTarget",
          "columnName": "msc:ForTarget",
          "query": "\\d\\d, \\d\\d",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "msc:ForTarget",
    "expression": "grel:value.replace(\", \", \"|\")",
    "onError": "store-error",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column msc:ForTarget using expression grel:value.replace(\", \", \"|\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "msc:ForTarget",
          "expression": "value",
          "columnName": "msc:ForTarget",
          "invert": true,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": " 00A79 and Sections 70-XX through 86-XX",
                "l": " 00A79 and Sections 70-XX through 86-XX"
              }
            },
            {
              "v": {
                "v": " the classification number -04 in that area\\}",
                "l": " the classification number -04 in that area\\}"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "text",
          "name": "msc:ForTarget",
          "columnName": "msc:ForTarget",
          "query": ",",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "msc:ForTarget",
          "columnName": "msc:ForTarget",
          "query": "xx, \\d\\d",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "msc:ForTarget",
    "expression": "grel:value.replace(\", \", \"|\")",
    "onError": "store-error",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column msc:ForTarget using expression grel:value.replace(\", \", \"|\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "msc:ForTarget",
          "expression": "value",
          "columnName": "msc:ForTarget",
          "invert": true,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": " 74Axx, or other parts of 74-XX\\}",
                "l": " 74Axx, or other parts of 74-XX\\}"
              }
            },
            {
              "v": {
                "v": " the classification number -04 in that area\\}",
                "l": " the classification number -04 in that area\\}"
              }
            },
            {
              "v": {
                "v": " 00A79 and Sections 70-XX through 86-XX",
                "l": " 00A79 and Sections 70-XX through 86-XX"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "text",
          "name": "msc:ForTarget",
          "columnName": "msc:ForTarget",
          "query": "}",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "msc:ForTarget",
          "columnName": "msc:ForTarget",
          "query": "",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "msc:ForTarget",
    "expression": "grel:value.replace(\"\\\\}\", \"\")",
    "onError": "store-error",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column msc:ForTarget using expression grel:value.replace(\"\\\\}\", \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "msc:ForTarget",
          "expression": "value",
          "columnName": "msc:ForTarget",
          "invert": true,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": " 00A79 and Sections 70-XX through 86-XX",
                "l": " 00A79 and Sections 70-XX through 86-XX"
              }
            },
            {
              "v": {
                "v": " 74Axx, or other parts of 74-XX\\}",
                "l": " 74Axx, or other parts of 74-XX\\}"
              }
            },
            {
              "v": {
                "v": " the classification number -04 in that area\\}",
                "l": " the classification number -04 in that area\\}"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "text",
          "name": "msc:ForTarget",
          "columnName": "msc:ForTarget",
          "query": "also|mainly|in particular|especially",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        },
        {
          "type": "text",
          "name": "msc:ForTarget",
          "columnName": "msc:ForTarget",
          "query": "",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "msc:ForTarget",
    "expression": "grel:value.replace(\"especially \", \"\").replace(\"also \", \"\").replace(\"mainly \", \"\")",
    "onError": "store-error",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column msc:ForTarget using expression grel:value.replace(\"especially \", \"\").replace(\"also \", \"\").replace(\"mainly \", \"\")"
  },
  {
    "op": "core/multivalued-cell-split",
    "columnName": "msc:ForTarget",
    "keyColumnName": "File",
    "mode": "separator",
    "separator": "|",
    "regex": false,
    "description": "Split multi-valued cells in column msc:ForTarget"
  },
  {
    "op": "core/fill-down",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "File",
    "description": "Fill down cells in column File"
  },
  {
    "op": "core/fill-down",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "code",
    "description": "Fill down cells in column code"
  },
  {
    "op": "core/fill-down",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "text",
    "description": "Fill down cells in column text"
  },
  {
    "op": "core/fill-down",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "description",
    "description": "Fill down cells in column description"
  },
  {
    "op": "core/fill-down",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Concept Identifier",
    "description": "Fill down cells in column Concept Identifier"
  },
  {
    "op": "core/fill-down",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "comparison text/description",
    "description": "Fill down cells in column comparison text/description"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "msc:ForTarget",
          "expression": "value",
          "columnName": "msc:ForTarget",
          "invert": true,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": " 00A79 and Sections 70-XX through 86-XX",
                "l": " 00A79 and Sections 70-XX through 86-XX"
              }
            },
            {
              "v": {
                "v": " 74Axx, or other parts of 74-XX\\}",
                "l": " 74Axx, or other parts of 74-XX\\}"
              }
            },
            {
              "v": {
                "v": " the classification number -04 in that area\\}",
                "l": " the classification number -04 in that area\\}"
              }
            }
          ],
          "selectBlank": true,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "code",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column code using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "msc:ForTarget",
          "expression": "value",
          "columnName": "msc:ForTarget",
          "invert": true,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": " 00A79 and Sections 70-XX through 86-XX",
                "l": " 00A79 and Sections 70-XX through 86-XX"
              }
            },
            {
              "v": {
                "v": " 74Axx, or other parts of 74-XX\\}",
                "l": " 74Axx, or other parts of 74-XX\\}"
              }
            },
            {
              "v": {
                "v": " the classification number -04 in that area\\}",
                "l": " the classification number -04 in that area\\}"
              }
            }
          ],
          "selectBlank": true,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "msc:ForTarget",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column msc:ForTarget using expression value.trim()"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "msc:ForTarget",
          "expression": "value",
          "columnName": "msc:ForTarget",
          "invert": true,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": " 00A79 and Sections 70-XX through 86-XX",
                "l": " 00A79 and Sections 70-XX through 86-XX"
              }
            },
            {
              "v": {
                "v": " 74Axx, or other parts of 74-XX\\}",
                "l": " 74Axx, or other parts of 74-XX\\}"
              }
            },
            {
              "v": {
                "v": " the classification number -04 in that area\\}",
                "l": " the classification number -04 in that area\\}"
              }
            }
          ],
          "selectBlank": true,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "msc:ForTarget",
    "expression": "grel:\"<https://msc2020.org/resources/MSC/2020/MSC2020/seeForStatement-\"+cells[\"code\"].value+\"-to-\"+value+\">\"",
    "onError": "store-error",
    "newColumnName": "For-x-see-y statement identifier",
    "columnInsertIndex": 28,
    "description": "Create column For-x-see-y statement identifier at index 28 based on column msc:ForTarget using expression grel:\"<https://msc2020.org/resources/MSC/2020/MSC2020/seeForStatement-\"+cells[\"code\"].value+\"-to-\"+value+\">\""
  },
  {
    "op": "core/fill-down",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "msc:ForTarget",
          "expression": "value",
          "columnName": "msc:ForTarget",
          "invert": true,
          "omitBlank": false,
          "omitError": false,
          "selection": [],
          "selectBlank": true,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "msc:scope",
    "description": "Fill down cells in column msc:scope"
  },
  {
    "op": "core/fill-down",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "msc:ForTarget",
          "expression": "value",
          "columnName": "msc:ForTarget",
          "invert": true,
          "omitBlank": false,
          "omitError": false,
          "selection": [],
          "selectBlank": true,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "description - extract 3 \\{For 2",
    "description": "Fill down cells in column description - extract 3 \\{For 2"
  },
  {
    "op": "core/fill-down",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "msc:ForTarget",
          "expression": "value",
          "columnName": "msc:ForTarget",
          "invert": true,
          "omitBlank": false,
          "omitError": false,
          "selection": [],
          "selectBlank": true,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "description - extract 3 \\{For",
    "description": "Fill down cells in column description - extract 3 \\{For"
  },
  {
    "op": "core/fill-down",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "msc:ForTarget",
          "expression": "value",
          "columnName": "msc:ForTarget",
          "invert": true,
          "omitBlank": false,
          "omitError": false,
          "selection": [],
          "selectBlank": true,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "description - extract 3 \\{For 1",
    "description": "Fill down cells in column description - extract 3 \\{For 1"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "msc:ForTarget",
          "expression": "value",
          "columnName": "msc:ForTarget",
          "invert": true,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": " 00A79 and Sections 70-XX through 86-XX",
                "l": " 00A79 and Sections 70-XX through 86-XX"
              }
            },
            {
              "v": {
                "v": " 74Axx, or other parts of 74-XX\\}",
                "l": " 74Axx, or other parts of 74-XX\\}"
              }
            },
            {
              "v": {
                "v": " the classification number -04 in that area\\}",
                "l": " the classification number -04 in that area\\}"
              }
            }
          ],
          "selectBlank": true,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "For-x-see-y statement identifier",
    "expression": "grel:value+\"a msc:seeForStatement ; rdf:subject \"+cells[\"Concept Identifier\"].value+\"; rdf:predicate msc:seeFor ; rdf:object <https://msc2020.org/resources/MSC/2020/MSC2020/\"+cells[\"msc:ForTarget\"].value+\"> ; msc:scope \\\"\"+cells[\"msc:scope\"].value+\"\\\"^^rdf:XMLLiteral .\"",
    "onError": "store-error",
    "newColumnName": "For-x-see-y statements",
    "columnInsertIndex": 29,
    "description": "Create column For-x-see-y statements at index 29 based on column For-x-see-y statement identifier using expression grel:value+\"a msc:seeForStatement ; rdf:subject \"+cells[\"Concept Identifier\"].value+\"; rdf:predicate msc:seeFor ; rdf:object <https://msc2020.org/resources/MSC/2020/MSC2020/\"+cells[\"msc:ForTarget\"].value+\"> ; msc:scope \\\"\"+cells[\"msc:scope\"].value+\"\\\"^^rdf:XMLLiteral .\""
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "msc:ForTarget",
          "expression": "value",
          "columnName": "msc:ForTarget",
          "invert": true,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": " 00A79 and Sections 70-XX through 86-XX",
                "l": " 00A79 and Sections 70-XX through 86-XX"
              }
            },
            {
              "v": {
                "v": " 74Axx, or other parts of 74-XX\\}",
                "l": " 74Axx, or other parts of 74-XX\\}"
              }
            },
            {
              "v": {
                "v": " the classification number -04 in that area\\}",
                "l": " the classification number -04 in that area\\}"
              }
            }
          ],
          "selectBlank": true,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "For-x-see-y statement identifier",
    "expression": "grel:cells[\"Concept Identifier\"].value+\" msc:seeFor \"+value+\" .\"",
    "onError": "store-error",
    "newColumnName": "seeFor triples",
    "columnInsertIndex": 29,
    "description": "Create column seeFor triples at index 29 based on column For-x-see-y statement identifier using expression grel:cells[\"Concept Identifier\"].value+\" msc:seeFor \"+value+\" .\""
  },
  
#Step 11: Take text from column `description` over to the SKOS version as a scopeNote
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "comparison text/description",
          "expression": "value",
          "columnName": "comparison text/description",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "description",
    "expression": "grel:cells[\"Concept Identifier\"].value+\"skos:scopeNote \\\"\"+value+\"\\\"@en .\"",
    "onError": "store-error",
    "newColumnName": "scopeNote for descriptions that differ from text",
    "columnInsertIndex": 4,
    "description": "Create column scopeNote for descriptions that differ from text at index 4 based on column description using expression grel:cells[\"Concept Identifier\"].value+\"skos:scopeNote \\\"\"+value+\"\\\"@en .\""
  },
  {
    "op": "core/column-move",
    "columnName": "scopeNote for descriptions that differ from text",
    "index": 40,
    "description": "Move column scopeNote for descriptions that differ from text to position 40"
  }
]